diff --git a/include/letmecreate/click/motion.h b/include/letmecreate/click/motion.h
index 304454b..265b78e 100644
--- a/include/letmecreate/click/motion.h
+++ b/include/letmecreate/click/motion.h
@@ -26,7 +26,7 @@ int motion_click_enable(uint8_t mikrobus_index);
  *
  * @param[in] mikrobus_index Index of the mikrobus used by the click board (see #MIKROBUS_INDEX)
  * @param[in] callback Function to call if movement is detected
- * @return ID of the callback. Use #gpio_monitor_remove_callback to detach your callback.
+ * @return ID of the callback. Use #interrupt_configure to detach your callback.
  */
 int motion_click_attach_callback(uint8_t mikrobus_index, void(*callback)(uint8_t));
 
diff --git a/src/click/motion.c b/src/click/motion.c
index 2df2f19..b3cdd8d 100644
--- a/src/click/motion.c
+++ b/src/click/motion.c
@@ -1,7 +1,8 @@
 #include <stdio.h>
 #include "letmecreate/click/motion.h"
 #include "letmecreate/core/common.h"
-#include "letmecreate/core/gpio_monitor.h"
+#include "letmecreate/core/interrupts.h"
+#include "letmecreate/core/gpio.h"
 
 int motion_click_enable(uint8_t mikrobus_index)
 {
@@ -11,11 +12,6 @@ int motion_click_enable(uint8_t mikrobus_index)
         &&  !gpio_set_direction(MIKROBUS_1_RST, GPIO_OUTPUT)
         &&  !gpio_set_value(MIKROBUS_1_RST, 1))
             return 0;
-    case MIKROBUS_2:
-        if (!gpio_init(MIKROBUS_2_RST)
-        &&  !gpio_set_direction(MIKROBUS_2_RST, GPIO_OUTPUT)
-        &&  !gpio_set_value(MIKROBUS_2_RST, 1))
-            return 0;
     default:
         fprintf(stderr, "motion: Invalid mikrobus index.\n");
         return -1;
@@ -30,13 +26,8 @@ int motion_click_attach_callback(uint8_t mikrobus_index, void(*callback)(uint8_t
     case MIKROBUS_1:
         if (!gpio_init(MIKROBUS_1_INT)
          && !gpio_set_direction(MIKROBUS_1_INT, GPIO_INPUT)
-         && !gpio_monitor_init())
-            return gpio_monitor_add_callback(MIKROBUS_1_INT, GPIO_RAISING, callback);
-    case MIKROBUS_2:
-        if (!gpio_init(MIKROBUS_2_INT)
-         && !gpio_set_direction(MIKROBUS_2_INT, GPIO_INPUT)
-         && !gpio_monitor_init())
-            return gpio_monitor_add_callback(MIKROBUS_2_INT, GPIO_RAISING, callback);
+         && !interrupt_configure(callback))
+            return 0;
     default:
         fprintf(stderr, "motion: Invalid mikrobus index.\n");
         return -1;
@@ -53,11 +44,6 @@ int motion_click_disable(uint8_t mikrobus_index)
         &&  !gpio_set_direction(MIKROBUS_1_RST, GPIO_OUTPUT)
         &&  !gpio_set_value(MIKROBUS_1_RST, 0))
             return 0;
-    case MIKROBUS_2:
-        if (!gpio_init(MIKROBUS_2_RST)
-        &&  !gpio_set_direction(MIKROBUS_2_RST, GPIO_OUTPUT)
-        &&  !gpio_set_value(MIKROBUS_2_RST, 0))
-            return 0;
     default:
         fprintf(stderr, "motion: Invalid mikrobus index.\n");
         return -1;
