diff --git a/include/letmecreate/click/opto.h b/include/letmecreate/click/opto.h
index 58ca984..97fac8e 100644
--- a/include/letmecreate/click/opto.h
+++ b/include/letmecreate/click/opto.h
@@ -11,7 +11,6 @@
 #define __LETMECREATE_CLICK_OPTO_H__
 
 #include <stdint.h>
-#include <letmecreate/click/export.h>
 
 /** Index of channels on Opto Click. Channel 2 is not supported on Ci40. */
 enum OPTO_CLICK_CHANNEL_INDEX {
@@ -34,7 +33,7 @@ enum OPTO_CLICK_CHANNEL_INDEX {
  * @param[in] callback Function to call
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT opto_click_attach_callback(uint8_t mikrobus_index, uint8_t channel_index, void (*callback)(uint8_t));
+int opto_click_attach_callback(uint8_t mikrobus_index, uint8_t channel_index, void (*callback)(uint8_t));
 
 /**
  * @brief Read channel state.
@@ -46,6 +45,6 @@ int LETMECREATE_CLICK_EXPORT opto_click_attach_callback(uint8_t mikrobus_index,
  * @param[out] state 0 if low, 1 if high
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT opto_click_read_channel(uint8_t mikrobus_index, uint8_t channel_index, uint8_t *state);
+int opto_click_read_channel(uint8_t mikrobus_index, uint8_t channel_index, uint8_t *state);
 
 #endif
diff --git a/src/click/opto.c b/src/click/opto.c
index 310d201..d03c7be 100644
--- a/src/click/opto.c
+++ b/src/click/opto.c
@@ -3,17 +3,16 @@
 #include <letmecreate/click/opto.h>
 #include <letmecreate/core/common.h>
 #include <letmecreate/core/gpio.h>
-#include <letmecreate/core/gpio_monitor.h>
+#include <letmecreate/core/interrupts.h>
 
 
 static const uint8_t channel_pins[MIKROBUS_COUNT][OPTO_CLICK_CHANNEL_COUNT] = {
     { MIKROBUS_1_INT, 0, MIKROBUS_1_RST, MIKROBUS_1_AN },
-    { MIKROBUS_2_INT, 0, MIKROBUS_2_RST, MIKROBUS_2_AN }
 };
 
 static bool check_mikrobus_index(uint8_t mikrobus_index)
 {
-    if (mikrobus_index != MIKROBUS_1 && mikrobus_index != MIKROBUS_2) {
+    if (mikrobus_index != MIKROBUS_1) {
         fprintf(stderr, "opto: Invalid mikrobus index.\n");
         return false;
     }
@@ -51,14 +50,13 @@ int opto_click_attach_callback(uint8_t mikrobus_index, uint8_t channel_index, vo
 
     gpio_pin = channel_pins[mikrobus_index][channel_index];
     if (gpio_init(gpio_pin) < 0
-    ||  gpio_monitor_init() < 0
-    ||  gpio_monitor_add_callback(gpio_pin, GPIO_EDGE, callback) < 0)
+    ||  interrupt_configure(callback) < 0)
         return -1;
 
     return 0;
 }
 
-int LETMECREATE_CLICK_EXPORT opto_click_read_channel(uint8_t mikrobus_index, uint8_t channel_index, uint8_t *state)
+int opto_click_read_channel(uint8_t mikrobus_index, uint8_t channel_index, uint8_t *state)
 {
     uint8_t gpio_pin = 0;
 
