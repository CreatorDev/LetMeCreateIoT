diff --git a/include/letmecreate/click/relay.h b/include/letmecreate/click/relay.h
index 1cd7813..14dd8b1 100644
--- a/include/letmecreate/click/relay.h
+++ b/include/letmecreate/click/relay.h
@@ -10,27 +10,38 @@
 #define __LETMECREATE_CLICK_RELAY_H__
 
 #include <stdint.h>
-#include <letmecreate/click/export.h>
 
 /**
  * @brief Enable relay 1 on Relay Click.
  *
- * This is the only relay that can be switched on the CI40. The second relay
- * uses a CS pin which is reserved by SPI.
  * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT relay_click_enable_relay_1(uint8_t mikrobus_index);
+int relay_click_enable_relay_1(uint8_t mikrobus_index);
 
 /**
  * @brief Disable relay 1 on Relay Click.
  *
- * This is the only relay that can be switched on the CI40. The second relay
- * uses a CS pin which is reserved by SPI.
  * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT relay_click_disable_relay_1(uint8_t mikrobus_index);
+int relay_click_disable_relay_1(uint8_t mikrobus_index);
+
+/**
+ * @brief Enable relay 2 on Relay Click.
+ *
+ * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
+ * @return 0 if successful, -1 otherwise
+ */
+int relay_click_enable_relay_2(uint8_t mikrobus_index);
+
+/**
+ * @brief Disable relay 2 on Relay Click.
+ *
+ * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
+ * @return 0 if successful, -1 otherwise
+ */
+int relay_click_disable_relay_2(uint8_t mikrobus_index);
 
 /**
  * @brief Set state of relay 1 on Relay Click.
@@ -39,7 +50,7 @@ int LETMECREATE_CLICK_EXPORT relay_click_disable_relay_1(uint8_t mikrobus_index)
  * @param[out] state State of the relay, 0: off, 1: on
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT relay_click_set_relay_1_state(uint8_t mikrobus_index, uint8_t state);
+int relay_click_set_relay_1_state(uint8_t mikrobus_index, uint8_t state);
 
 /**
  * @brief Get state of relay 1 on Relay Click.
@@ -48,6 +59,25 @@ int LETMECREATE_CLICK_EXPORT relay_click_set_relay_1_state(uint8_t mikrobus_inde
  * @param[out] state State of the relay, 0: off, 1: on
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT relay_click_get_relay_1_state(uint8_t mikrobus_index, uint8_t *state);
+int relay_click_get_relay_1_state(uint8_t mikrobus_index, uint8_t *state);
+
+/**
+ * @brief Set state of relay 2 on Relay Click.
+ *
+ * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
+ * @param[out] state State of the relay, 0: off, 1: on
+ * @return 0 if successful, -1 otherwise
+ */
+int relay_click_set_relay_2_state(uint8_t mikrobus_index, uint8_t state);
+
+/**
+ * @brief Get state of relay 2 on Relay Click.
+ *
+ * @param[in] mikrobus_index Index of the mikrobus (see #MIKROBUS_INDEX)
+ * @param[out] state State of the relay, 0: off, 1: on
+ * @return 0 if successful, -1 otherwise
+ */
+int relay_click_get_relay_2_state(uint8_t mikrobus_index, uint8_t *state);
+
 
 #endif
diff --git a/src/click/relay.c b/src/click/relay.c
index 49b4216..f925998 100644
--- a/src/click/relay.c
+++ b/src/click/relay.c
@@ -3,26 +3,6 @@
 #include <letmecreate/core/common.h>
 #include <letmecreate/core/gpio.h>
 
-
-static uint8_t find_gpio(uint8_t mikrobus_index)
-{
-    uint8_t gpio_pin = 0;
-
-    switch (mikrobus_index) {
-    case MIKROBUS_1:
-        gpio_pin = MIKROBUS_1_PWM;
-        break;
-    case MIKROBUS_2:
-        gpio_pin = MIKROBUS_2_PWM;
-        break;
-    default:
-        fprintf(stderr, "relay: Invalid mikrobus index.\n");
-        break;
-    }
-
-    return gpio_pin;
-}
-
 int relay_click_enable_relay_1(uint8_t mikrobus_index)
 {
     return relay_click_set_relay_1_state(mikrobus_index, 1);
@@ -33,11 +13,19 @@ int relay_click_disable_relay_1(uint8_t mikrobus_index)
     return relay_click_set_relay_1_state(mikrobus_index, 0);
 }
 
+int relay_click_enable_relay_2(uint8_t mikrobus_index)
+{
+    return relay_click_set_relay_2_state(mikrobus_index, 1);
+}
+
+int relay_click_disable_relay_2(uint8_t mikrobus_index)
+{
+    return relay_click_set_relay_2_state(mikrobus_index, 0);
+}
+
 int relay_click_set_relay_1_state(uint8_t mikrobus_index, uint8_t state)
 {
-    uint8_t gpio_pin = find_gpio(mikrobus_index);
-    if (gpio_pin == 0)
-        return -1;
+    uint8_t gpio_pin = MIKROBUS_1_PWM;
 
     if (gpio_init(gpio_pin) < 0
     ||  gpio_set_direction(gpio_pin, GPIO_OUTPUT) < 0
@@ -49,9 +37,31 @@ int relay_click_set_relay_1_state(uint8_t mikrobus_index, uint8_t state)
 
 int relay_click_get_relay_1_state(uint8_t mikrobus_index, uint8_t *state)
 {
-    uint8_t gpio_pin = find_gpio(mikrobus_index);
-    if (gpio_pin == 0)
+    uint8_t gpio_pin = MIKROBUS_1_PWM;
+
+    if (state == NULL) {
+        fprintf(stderr, "relay: \n");
         return -1;
+    }
+
+    return gpio_get_value(gpio_pin, state);
+}
+
+int relay_click_set_relay_2_state(uint8_t mikrobus_index, uint8_t state)
+{
+    uint8_t gpio_pin = MIKROBUS_1_CS;
+
+    if (gpio_init(gpio_pin) < 0
+    ||  gpio_set_direction(gpio_pin, GPIO_OUTPUT) < 0
+    ||  gpio_set_value(gpio_pin, !!state) < 0)
+        return -1;
+
+    return 0;
+}
+
+int relay_click_get_relay_2_state(uint8_t mikrobus_index, uint8_t *state)
+{
+    uint8_t gpio_pin = MIKROBUS_1_CS;
 
     if (state == NULL) {
         fprintf(stderr, "relay: \n");
