diff --git a/include/letmecreate/click/oled.h b/include/letmecreate/click/oled.h
index b0bdf0b..b75631a 100644
--- a/include/letmecreate/click/oled.h
+++ b/include/letmecreate/click/oled.h
@@ -11,7 +11,6 @@
 #define __LETMECREATE_CLICK_OLED_H__
 
 #include <stdint.h>
-#include <letmecreate/click/export.h>
 
 /**
  * @brief Use SPI bus to communicate with OLED Click.
@@ -19,14 +18,14 @@
  * By default, it uses I2C to communicate with OLED Click. This function should
  * be called before using the device.
  */
-void LETMECREATE_CLICK_EXPORT oled_click_use_spi(void);
+void oled_click_use_spi(void);
 
 /**
  * @brief Use I2C bus to communicate with OLED Click.
  *
  * This function should be called before using the device.
  */
-void LETMECREATE_CLICK_EXPORT oled_click_use_i2c(void);
+void oled_click_use_i2c(void);
 
 /**
  * @brief Enable the OLED Click.
@@ -36,7 +35,7 @@ void LETMECREATE_CLICK_EXPORT oled_click_use_i2c(void);
  * @param[in] mikrobus_index Index of the mikrobus used by the click board (see #MIKROBUS_INDEX)
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_enable(uint8_t mikrobus_index);
+int oled_click_enable(uint8_t mikrobus_index);
 
 /**
  * @brief Set the constrast
@@ -44,7 +43,7 @@ int LETMECREATE_CLICK_EXPORT oled_click_enable(uint8_t mikrobus_index);
  * @param[in] contrast 0: no contrast, 255: maximum contrast
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_set_contrast(uint8_t contrast);
+int oled_click_set_contrast(uint8_t contrast);
 
 /**
  * @brief Display pixel buffer
@@ -55,7 +54,7 @@ int LETMECREATE_CLICK_EXPORT oled_click_set_contrast(uint8_t contrast);
  * @param[in] data Array of bytes of length 258 (96x4).
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_raw_write(uint8_t *data);
+int oled_click_raw_write(uint8_t *data);
 
 /**
  * @brief Write some text
@@ -63,7 +62,7 @@ int LETMECREATE_CLICK_EXPORT oled_click_raw_write(uint8_t *data);
  * @param[in] str A string of length less or equal than 16.
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_write_text(char *str);
+int oled_click_write_text(char *str);
 
 /**
  * @brief Convert a character into an array of bytes
@@ -72,13 +71,13 @@ int LETMECREATE_CLICK_EXPORT oled_click_write_text(char *str);
  * @param[out] out An array of 22 bytes representing the character.
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_get_char(char c, const uint8_t **out);
+int oled_click_get_char(char c, const uint8_t **out);
 
 /**
  * @brief Disable the OLED Click.
  *
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT oled_click_disable(void);
+int oled_click_disable(void);
 
 #endif
diff --git a/src/click/oled.c b/src/click/oled.c
index 120d854..ea5419e 100644
--- a/src/click/oled.c
+++ b/src/click/oled.c
@@ -1,7 +1,9 @@
 #include <stdbool.h>
 #include <stdio.h>
 #include <string.h>
-#include <time.h>
+
+#include "sys/clock.h"
+
 #include <letmecreate/click/oled.h>
 #include <letmecreate/core/common.h>
 #include <letmecreate/core/gpio.h>
@@ -159,13 +161,7 @@ static int oled_click_cmd(uint8_t cmd)
 
 static void sleep_50ms(void)
 {
-    struct timespec rem, req = {
-        .tv_nsec = 50000000,
-        .tv_sec = 0
-    };
-
-    while (nanosleep(&req, &rem))
-        req = rem;
+    clock_delay_usec(50000);
 }
 
 static int oled_click_set_page_addr(uint8_t pageno)
@@ -200,13 +196,6 @@ int oled_click_enable(uint8_t mikrobus_index)
             else
                 sa0_pin = MIKROBUS_1_PWM;
             break;
-        case MIKROBUS_2:
-            reset_pin = MIKROBUS_2_RST;
-            if (use_spi)
-                dc_pin = MIKROBUS_2_PWM;
-            else
-                sa0_pin = MIKROBUS_2_PWM;
-            break;
         default:
             fprintf(stderr, "oled: Invalid mikrobus index.\n");
             return -1;
