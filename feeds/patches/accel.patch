diff --git a/include/letmecreate/click/accel.h b/include/letmecreate/click/accel.h
index e9f6c45..55229e7 100644
--- a/include/letmecreate/click/accel.h
+++ b/include/letmecreate/click/accel.h
@@ -11,7 +11,6 @@
 #define __LETMECREATE_CLICK_ACCEL_H__
 
 #include <stdint.h>
-#include <letmecreate/click/export.h>
 
 /**
  * @brief Use SPI bus to communicate with Accel Click.
@@ -19,7 +18,7 @@
  * By default, it uses SPI to communicate with Accel Click. This function should
  * be called before using the device.
  */
-void LETMECREATE_CLICK_EXPORT accel_click_use_spi(void);
+void accel_click_use_spi(void);
 
 /**
  * @brief Use I2C bus to communicate with Accel Click.
@@ -29,14 +28,14 @@ void LETMECREATE_CLICK_EXPORT accel_click_use_spi(void);
  * @param add_bit Jumper on the click board to change the address of the device.
  * Should be 0 or 1.
  */
-void LETMECREATE_CLICK_EXPORT accel_click_use_i2c(uint8_t add_bit);
+void accel_click_use_i2c(uint8_t add_bit);
 
 /**
  * @brief Enable the Accel Click (Use SPI bus).
  *
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT accel_click_enable(void);
+int accel_click_enable(void);
 
 /**
  * @brief Get current measure from Accel Click.
@@ -46,13 +45,13 @@ int LETMECREATE_CLICK_EXPORT accel_click_enable(void);
  * @param[out] accelZ Z component of acceleration in g (must not be null)
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT accel_click_get_measure(float *accelX, float *accelY, float *accelZ);
+int accel_click_get_measure(float *accelX, float *accelY, float *accelZ);
 
 /**
  * @brief Disable the Accel Click (set it in sleep mode).
  *
  * @return 0 if successful, -1 otherwise
  */
-int LETMECREATE_CLICK_EXPORT accel_click_disable(void);
+int accel_click_disable(void);
 
 #endif
